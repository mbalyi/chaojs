/**
 * CHAO.JS: Button component
 */'use strict';var ChaoButtonType=Object.freeze({btn:'button',iconBtn:'iconButton',wIconBtn:'buttonWithIcon'}),ChaoButton=function(a={}){return this._options=a,this.$target=this._options.target,this.$element=null,this.renderTitle=function(){let a=``;return this._options.title?a=this._options.title:this.$target.text()&&(a=this.$target.text()),`<span class="chao-btn-title">${a}</span>`},this.renderIcon=function(){return`<span class="chao-btn-icon ${this._options.icon}"></span>`},this.init=function(){let a=``,b=``;switch(null==this._options.type&&(this._options.type=ChaoButtonType.btn),this._options.type){case ChaoButtonType.iconBtn:a=this.renderIcon();break;case ChaoButtonType.wIconBtn:b=this.renderTitle(),a=this.renderIcon();break;case ChaoButtonType.btn:default:b=this.renderTitle();}let c=`
            <button class="chao-btn chao-${this._options.type} ${this._options.customClass} ${this._options.disabled?'chao-disabled':''}" id="chao-${this.$target.attr('id')}" type="button" ${this._options.disabled?'disabled':''}>
                ${a}
                ${b}
            </button>
        `;this.$target.replaceWith($.parseHTML(c)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-btn`),this.handleBindings(),this.$element.data('chaoButton',this)},this.handleBindings=function(){let a=this;$(this.$element).unbind(),$(this.$element).on('click',b=>{!a._options.disabled&&a._options.callback&&a._options.callback.onClick&&a._options.callback.onClick(b)}),$(this.$element).on('mouseenter',b=>{a._options.callback&&a._options.callback.onMouseEnter&&a._options.callback.onMouseEnter(b)}),$(this.$element).on('mousedown',b=>{!a._options.disabled&&a._options.callback&&a._options.callback.onMouseDown&&a._options.callback.onMouseDown(b)})},this.enable=function(){this.$element.removeClass('chao-disabled'),this.$element.removeAttr('disabled'),this._options.disabled=!1},this.disable=function(){this.$element.addClass('chao-disabled'),this.$element.attr('disabled','disabled'),this._options.disabled=!0},this.init(this._options),this};jQuery.fn.chaoButton=function(a={}){a.target=this;let b=new ChaoButton(a);return b},'use strict';var ChaoCheckboxGroup=function(a={}){return this._widget='chaoCheckboxGroup',this._options=a,this._data=this._options.data,this.$target=this._options.target,this.$element=null,this.render=function(){let a='';this._data.forEach(b=>{a+=`
                <div class="chao-checkbox-btn chao-${b.key} ${b.value?'chao-checkbox-active':''}">
                    <span class="chao-checkbox-title">${b.title}</span>
                    <input type="checkbox" id="chao-${b.key}" ${b.value?'checked':''}>
                </div>
            `});let b=`<div class="chao-checkbox-group ${this._options.customClass}" id="chao-${this.$target.attr('id')}">${a}</div>`;this.$target.replaceWith($.parseHTML(b)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-checkbox-group`)},this.handleBindings=function(){let a=this;this._data.forEach(b=>{let c=b;$(`.chao-checkbox-btn.chao-${c.key}`).on('click',()=>{c.value=a.handleChecked(c),c.onChange&&c.onChange(c.value),a._options.onChange&&a._options.onChange({data:a._data,selected:a._data.filter(a=>{if(a.value)return a.key})})})})},this.handleChecked=function(a){let b=null;return'checked'===$(`.chao-checkbox-group #chao-${a.key}`).attr('checked')?($(`.chao-checkbox-group .chao-${a.key}`).removeClass('chao-checkbox-active'),$(`.chao-checkbox-group #chao-${a.key}`).removeAttr('checked'),b=!1):($(`.chao-checkbox-group .chao-${a.key}`).addClass('chao-checkbox-active'),$(`.chao-checkbox-group #chao-${a.key}`).attr('checked','checked'),b=!0),b},this.secureState=function(){return{_widget:this._widget,data:this._data}},this.init=function(){this.render(),this.handleBindings(),this.$element.data('chaoCheckboxGroup',this.secureState())},this.init(),this.secureState()};jQuery.fn.chaoCheckboxGroup=function(a={}){a.target=this;let b=new ChaoCheckboxGroup(a);return b},'use strict';var ChaoDropdown=function(a={}){return this._options=a,this._data=this._options.data,this.$target=this._options.target,this.$element=null,this.selectedItem=null,this.render=function(){let a=`
            <div class="chao-dropdown ${this._options.customClass}" id="chao-${this.$target.attr('id')}">
                <div class="chao-dropdown-body">
                    <div class="chao-title">${this._options.defaultTitle}</div>
                    <div class="chao-selected"></div>
                    <div class="chao-arrow"></div>
                </div>
                <div class="chao-dropdown-list"></div>
                <input id="${this.$target.attr('id')}" data-role="dropdown">
            </div>
        `;this.$target.replaceWith($.parseHTML(a)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-dropdown`),this.handleBindings()},this.reload=function(a){if(!0===Array.isArray(a))this._reload(a);else if('object'==typeof a)console.warn('Current dynamic list loading is NOT SUPPORTED via HTTP request!');else throw new Error('Not supported payload. Payload must be array or object!')},this._request=function(a){let b=this;$.ajax({url:a.url,type:a.requestType?a.requestType:'GET',dataType:a.dataTypa?a.requestType:'application/json',data:a.data?a.data:void 0,succes:function(a){if(!0===Array.isArray(a))b._reload(a);else throw console.error('Received data is not a list!'),new Error('Received data is not a list!')},error:function(a,b,c){throw console.error(b,a),c}})},this._reload=function(a=[]){let b=$('<div/>');a.forEach(a=>{b.append(`<div class="chao-item" data-chao-id="${a.id}">${a.text}</div>`)}),$(`#chao-${this.$target.attr('id')} .chao-dropdown-list`).empty().append(b.html())},this.selectItem=function(a){try{let b=a.data('chao-id');this.selectedItem=this._data.find(a=>{if(a.id===b)return a}),this.DOMModifier.getInstance().selectItem(this.selectedItem.text)}catch(a){throw console.error('Something went wrong during item selection.\n',a),a}},this.handleBindings=function(){let a=this;$(`.chao-dropdown-body`,this.$element).on('click',()=>{a.DOMModifier.getInstance().showItems()}),this.$element.on('click','.chao-item',b=>{a.selectItem($(b.currentTarget)),a.DOMModifier.getInstance().hideItems()}),this.$element.on('blur','.chao-dropdown-list',()=>{a.DOMModifier.getInstance().hideItems()})},this.DOMModifier=function(){let a=null,b=function(a={}){let b=a,c=$(`#chao-${b.id}`),d=$(`#chao-${b.id} .chao-dropdown-body`),e=$(`#chao-${b.id} .chao-dropdown-list`),f=function(){let a=d.css('width').split('px')[0],b=e.css('width').split('px')[0],c=75;return 75>b?c=75:b<=a?c=b:b>a&&(c=a),c+'px'},g=function(){let a=e.css('height').split('px')[0],b=75;return a>b&&(b=a),b+'px'};return{showItems:function(){e.css('width',f()),e.css('height',g()),e.show(),e.focus()},hideItems:function(){e.hide()},selectItem:function(a=''){$('.chao-selected',d).text(a),c.addClass('item-selected'),$('.chao-selected',d).show()}}};return{getInstance:function(c){return null===a&&(a=b(c)),a}}}(),this.init=function(){this.render(),this.DOMModifier.getInstance({id:this.$target.attr('id'),element:$(`#chao-${this.$target.attr('id')}`)}),null!==this._data&&void 0!==this._data&&!0===Array.isArray(this._data)&&this.reload(this._data)},this.init(),this};jQuery.fn.chaoDropdown=function(a={}){a.target=this;let b=new ChaoDropdown(a);return b},'use strict';var ChaoInput=function(a={}){this._options=a,this.$target=this._options.target,this.$element=null,this.getValue=function(){let a=``;return this._options.value?a=this._options.value:this.$target.val()&&(a=this.$target.val(),this._options.value=a),a},this.getName=function(){let a=``;return this._options.name?a=this._options.name:this.$target.attr('name')&&(a=this.$target.attr('name'),this._options.name=a),a},this.getPlaceHolder=function(){let a=``;return this._options.placeholder?a=this._options.placeholder:this.$target.attr('placeholder')&&(a=this.$target.attr('placeholder'),this._options.placeholder=a),a},this.getTitle=function(){let a=``;return this._options.title?a=this._options.title:this.$target.attr('title')&&(a=this.$target.attr('title'),this._options.title=a),a},this.getType=function(){let a=`text`;return this._options.type?a=this._options.type:this.$target.attr('type')&&(a=this.$target.attr('type'),this._options.type=a),a};let b=function(a){return this.name='TypeError',this.message=`Chao.JS input component doesn't support your selected type!\nSupported types:\n${a}`,this};return this.validateType=function(){const a=['text','email','number','password','search','url'];if(!a.includes(this._options._type))throw new b(a)},this.init=function(){try{let a=this.getValue(),b=this.getName(),c=this.getTitle(),d=this.getPlaceHolder(),e=this.getType(),f=`<input type="${e}" 
                                class="chao-input chao-${this._options.type} ${this._options.customClass} ${this._options.disabled?'chao-disabled':''}" 
                                id="chao-${this.$target.attr('id')}" 
                                ${b?`name="${b}"`:''}
                                ${d?`placeholder="${d}"`:''}
                                ${c?`title="${c}"`:''}
                                ${a?`value="${a}"`:''}
                                ${b?`name="${b}"`:''}
                                ${this._options.disabled?'disabled':''}>`;this.$target.replaceWith($.parseHTML(f)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-input`),this.handleBindings(),this.$element.data('chaoInput',this)}catch(a){console.error(`Error happened during the Chao.JS input component initialization. \n`,a)}},this.handleBindings=function(){let a=this;$(this.$element).unbind(),$(this.$element).on('click',b=>{!a._options.disabled&&a._options.callback&&a._options.callback.onClick&&a._options.callback.onClick(b)}),$(this.$element).on('focus',b=>{a._options.callback&&a._options.callback.onFocus&&a._options.callback.onFocus(b)}),$(this.$element).on('blur',b=>{a._options.callback&&a._options.callback.onBlur&&a._options.callback.onBlur(b)}),$(this.$element).on('change',b=>{a._options.callback&&a._options.callback.onChange&&a._options.callback.onChange(b)}),$(this.$element).on('keypress',b=>{a._options.callback&&a._options.callback.onKeypress&&a._options.callback.onKeypress(b)})},this.enable=function(){this.$element.removeClass('chao-disabled'),this.$element.removeAttr('disabled'),this._options.disabled=!1},this.disable=function(){this.$element.addClass('chao-disabled'),this.$element.attr('disabled','disabled'),this._options.disabled=!0},this.init(this._options),this};jQuery.fn.chaoInput=function(a={}){a.target=this;let b=new ChaoInput(a);return b},'use strict';var ChaoSwitch=function(a={}){return this._options=a,this.$target=this._options.target,this.$element=null,this.init=function(){let a=`
            <label class="chao-switch ${this._options.customClass}" id="chao-${this.$target.attr('id')}">
                <input type="checkbox" class="chao-checkbox" ${this._options.defaultChecked?'checked':''}>
                <span class="chao-slider"></span>
            </label>
        `;this.$target.replaceWith($.parseHTML(a)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-switch`),this.handleBindings(),this.$element.data('chaoSwitch',this)},this.handleBindings=function(){let a=this;$(`.chao-checkbox`,this.$element).unbind(),$(`.chao-checkbox`,this.$element).on('change',b=>{let c=this.handleChecked($(b.target));a._options.onChange&&a._options.onChange({checked:c})})},this.handleChecked=function(a){let b=null;return'checked'===a.attr('checked')?(a.removeAttr('checked'),b=!1):(a.attr('checked','checked'),b=!0),b},this.init(),this};jQuery.fn.chaoSwitch=function(a={}){a.target=this;let b=new ChaoSwitch(a);return b};