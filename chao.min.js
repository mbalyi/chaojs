/**
 * CHAO.JS: Button component
 */'use strict';var ChaoButtonType=Object.freeze({btn:'button',iconBtn:'iconButton',wIconBtn:'buttonWithIcon'}),ChaoButton=function(a={}){return this._options=a,this.$target=this._options.target,this.$element=null,this.renderTitle=function(){let a=``;return this._options.title?a=this._options.title:this.$target.text()&&(a=this.$target.text()),`<span class="chao-btn-title">${a}</span>`},this.renderIcon=function(){return`<span class="chao-btn-icon ${this._options.icon}"></span>`},this.init=function(){let a=``,b=``;switch(null==this._options.type&&(this._options.type=ChaoButtonType.btn),this._options.type){case ChaoButtonType.iconBtn:a=this.renderIcon();break;case ChaoButtonType.wIconBtn:b=this.renderTitle(),a=this.renderIcon();break;case ChaoButtonType.btn:default:b=this.renderTitle();}let c=`
            <button class="chao-btn chao-${this._options.type} ${this._options.customClass?this._options.customClass:''} ${this._options.disabled?'chao-disabled':''}" id="chao-${this.$target.attr('id')}" type="button" ${this._options.disabled?'disabled':''}>
                ${a}
                ${b}
            </button>
        `;this.$target.replaceWith($.parseHTML(c)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-btn`),this.handleBindings(),this.$element.data('chaoButton',this)},this.handleBindings=function(){let a=this;$(this.$element).unbind(),$(this.$element).on('click',b=>{!a._options.disabled&&a._options.callback&&a._options.callback.onClick&&a._options.callback.onClick(b)}),$(this.$element).on('mouseenter',b=>{a._options.callback&&a._options.callback.onMouseEnter&&a._options.callback.onMouseEnter(b)}),$(this.$element).on('mousedown',b=>{!a._options.disabled&&a._options.callback&&a._options.callback.onMouseDown&&a._options.callback.onMouseDown(b)})},this.enable=ChaoFormService.getInstance().enable,this.init(this._options),this};jQuery.fn.chaoButton=function(a={}){a.target=this;let b=new ChaoButton(a);return b},'use strict';var ChaoCheckboxGroup=function(a={}){return this._widget='chaoCheckboxGroup',this._options=a,this._data=this._options.data,this.$target=this._options.target,this.$element=null,this.render=function(){let a='';this._data.forEach(b=>{a+=`
                <div class="chao-checkbox-btn chao-${b.key} ${b.value?'chao-checkbox-active':''} ${b.disabled?'chao-disabled':''}">
                    <span class="chao-checkbox-title">${b.title}</span>
                    <input type="checkbox" id="chao-${b.key}" ${b.value?'checked':''} ${b.disabled?'disabled':''}>
                </div>
            `});let b=`<div class="chao-checkbox-group ${this._options.customClass}" id="chao-${this.$target.attr('id')}">${a}</div>`;this.$target.replaceWith($.parseHTML(b)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-checkbox-group`)},this.handleBindings=function(){let a=this;this._data.forEach(b=>{let c=b;$(`.chao-checkbox-btn.chao-${c.key}`,a.$element).on('click',b=>{$(b.currentTarget).hasClass('chao-disabled')||(c.value=a.handleChecked(a,c),c.onChange&&c.onChange(c.value),a._options.onChange&&a._options.onChange({data:a._data,selected:a._data.filter(a=>{if(a.value)return a.key})}))})})},this.handleChecked=function(a,b){let c=null;return'checked'===$(`#chao-${b.key}`,a.$element).attr('checked')?($(`.chao-${b.key}`,a.$element).removeClass('chao-checkbox-active'),$(`#chao-${b.key}`,a.$element).removeAttr('checked'),c=!1):($(`.chao-${b.key}`,a.$element).addClass('chao-checkbox-active'),$(`#chao-${b.key}`,a.$element).attr('checked','checked'),c=!0),c},this.secureState=function(){return{_widget:this._widget,data:this._data}},this.enable=function(a=!0,b=void 0){if(void 0===b){a?this.$element.removeClass('chao-disabled'):this.$element.addClass('chao-disabled');for(let b of this._data){let c=Object.assign({enable:ChaoFormService.getInstance().enable},b);c._options={disabled:c.disabled},c.$element=$(`.chao-checkbox-btn.chao-${b.key}`,this.$element),c.enable(a),c=null}}else{let c=this._data.find(a=>{if(a.key===b)return a}),d=Object.assign({enable:ChaoFormService.getInstance().enable},c);d._options={disabled:d.disabled},d.$element=$(`.chao-checkbox-btn.chao-${b}`,this.$element),d.enable(a),d=null}},this.init=function(){this.render(),this.handleBindings(),this.$element.data('chaoCheckboxGroup',this)},this.init(),this;// .secureState();
};jQuery.fn.chaoCheckboxGroup=function(a={}){a.target=this;let b=new ChaoCheckboxGroup(a);return b},'use strict';var ChaoDropdown=function(a={}){return this._options=a,this._data=this._options.data,this.$target=this._options.target,this.$element=null,this.selectedItem=null,this.render=function(){let a=`
            <div class="chao-dropdown ${this._options.customClass}" id="chao-${this.$target.attr('id')}">
                <div class="chao-dropdown-body">
                    <div class="chao-title">${this._options.defaultTitle}</div>
                    <div class="chao-selected"></div>
                    <div class="chao-arrow"></div>
                </div>
                <div class="chao-dropdown-list"></div>
                <input id="${this.$target.attr('id')}" data-role="dropdown">
            </div>
        `;this.$target.replaceWith($.parseHTML(a)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-dropdown`),this.handleBindings()},this.reload=function(a){if(!0===Array.isArray(a))this._reload(a);else if('object'==typeof a)console.warn('Current dynamic list loading is NOT SUPPORTED via HTTP request!');else throw new Error('Not supported payload. Payload must be array or object!')},this._request=function(a){let b=this;$.ajax({url:a.url,type:a.requestType?a.requestType:'GET',dataType:a.dataTypa?a.requestType:'application/json',data:a.data?a.data:void 0,succes:function(a){if(!0===Array.isArray(a))b._reload(a);else throw console.error('Received data is not a list!'),new Error('Received data is not a list!')},error:function(a,b,c){throw console.error(b,a),c}})},this._reload=function(a=[]){let b=$('<div/>');a.forEach(a=>{b.append(`<div class="chao-item" data-chao-id="${a.id}">${a.text}</div>`)}),$(`#chao-${this.$target.attr('id')} .chao-dropdown-list`).empty().append(b.html())},this.selectItem=function(a){try{let b=a.data('chao-id');this.selectedItem=this._data.find(a=>{if(a.id===b)return a}),this.DOMModifier.getInstance().selectItem(this.selectedItem.text)}catch(a){throw console.error('Something went wrong during item selection.\n',a),a}},this.handleBindings=function(){let a=this;$(`.chao-dropdown-body`,this.$element).on('click',()=>{a.DOMModifier.getInstance().showItems()}),this.$element.on('click','.chao-item',b=>{a.selectItem($(b.currentTarget)),a.DOMModifier.getInstance().hideItems()}),this.$element.on('blur','.chao-dropdown-list',()=>{a.DOMModifier.getInstance().hideItems()})},this.DOMModifier=function(){let a=null,b=function(a={}){let b=a,c=$(`#chao-${b.id}`),d=$(`#chao-${b.id} .chao-dropdown-body`),e=$(`#chao-${b.id} .chao-dropdown-list`),f=function(){let a=d.css('width').split('px')[0],b=e.css('width').split('px')[0],c=75;return 75>b?c=75:b<=a?c=b:b>a&&(c=a),c+'px'},g=function(){let a=e.css('height').split('px')[0],b=75;return a>b&&(b=a),b+'px'};return{showItems:function(){e.css('width',f()),e.css('height',g()),e.show(),e.focus()},hideItems:function(){e.hide()},selectItem:function(a=''){$('.chao-selected',d).text(a),c.addClass('item-selected'),$('.chao-selected',d).show()}}};return{getInstance:function(c){return null===a&&(a=b(c)),a}}}(),this.init=function(){this.render(),this.DOMModifier.getInstance({id:this.$target.attr('id'),element:$(`#chao-${this.$target.attr('id')}`)}),null!==this._data&&void 0!==this._data&&!0===Array.isArray(this._data)&&this.reload(this._data)},this.init(),this};jQuery.fn.chaoDropdown=function(a={}){a.target=this;let b=new ChaoDropdown(a);return b};/**
 * Chao.JS Form Service
 */var ChaoFormService=function(){let a=null,b=function(){return{enable:function(a=!0){try{let b=this.$element;return!this.$element.is('input')&&0<$('input',this.$element).length&&(b=$('input',this.$element)),!0===a?(this.$element.removeClass('chao-disabled'),b.removeAttr('disabled')):!1===a&&(this.$element.addClass('chao-disabled'),b.attr('disabled','disabled')),this._options.disabled=a,this._options.disabled}catch(a){console.error(`Chao Form service couldn't disable component. \n`,a)}}}};return{getInstance:function(){return null===a&&(a=b()),a}}}();/**
 * CHAO.JS: Input component
 */var ChaoInput=function(a={}){this._options=a,this.$target=this._options.target,this.$element=null,this.getValue=function(){let a=``;return this._options.value?a=this._options.value:this.$target.val()&&(a=this.$target.val(),this._options.value=a),a},this.getName=function(){let a=``;return this._options.name?a=this._options.name:this.$target.attr('name')&&(a=this.$target.attr('name'),this._options.name=a),a},this.getPlaceHolder=function(){let a=``;return this._options.placeholder?a=this._options.placeholder:this.$target.attr('placeholder')&&(a=this.$target.attr('placeholder'),this._options.placeholder=a),a},this.getTitle=function(){let a=``;return this._options.title?a=this._options.title:this.$target.attr('title')&&(a=this.$target.attr('title'),this._options.title=a),a},this.getType=function(){let a=`text`;return this._options.type?a=this._options.type:this.$target.attr('type')&&(a=this.$target.attr('type'),this._options.type=a),a};let b=function(a){return this.name='TypeError',this.message=`Chao.JS input component doesn't support your selected type!\nSupported types:\n${a}`,this};return this.validateType=function(){const a=['text','email','number','password','search','url'];if(!a.includes(this._options._type))throw new b(a)},this.getDisabled=function(){let a=``;return this._options.disabled?a=this._options.disabled:this.$target.attr('disabled')&&(a=this.$target.attr('disabled'),this._options.type=a),a},this.getRequired=function(){let a=``;return this._options.required?a=this._options.required:this.$target.attr('required')&&(a=this.$target.attr('required'),this._options.required=a),a},this.init=function(){try{let a=this.getValue(),b=this.getName(),c=this.getTitle(),d=this.getPlaceHolder(),e=this.getType(),f=`<input type="${e}" 
                                class="chao-input chao-${e} ${this._options.customClass?this._options.customClass:''} ${this.getDisabled()?'chao-disabled':''}" 
                                id="chao-${this.$target.attr('id')}" 
                                ${b?`name="${b}"`:''}
                                ${d?`placeholder="${d}"`:''}
                                ${c?`title="${c}"`:''}
                                ${a?`value="${a}"`:''}
                                ${b?`name="${b}"`:''}
                                ${this.getDisabled()?'disabled':''}
                                ${this.getRequired()?'required':''}>`;this.$target.replaceWith($.parseHTML(f)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-input`),this.handleBindings(),this.$element.data('chaoInput',this)}catch(a){console.error(`Error happened during the Chao.JS input component initialization. \n`,a)}},this.handleBindings=function(){let a=this;$(this.$element).unbind(),$(this.$element).on('click',b=>{!a._options.disabled&&a._options.callback&&a._options.callback.onClick&&a._options.callback.onClick(b)}),$(this.$element).on('focus',b=>{a._options.callback&&a._options.callback.onFocus&&a._options.callback.onFocus(b)}),$(this.$element).on('blur',b=>{a._options.callback&&a._options.callback.onBlur&&a._options.callback.onBlur(b)}),$(this.$element).on('change',b=>{a._options.callback&&a._options.callback.onChange&&a._options.callback.onChange(b)}),$(this.$element).on('keypress',b=>{a._options.callback&&a._options.callback.onKeypress&&a._options.callback.onKeypress(b)})},this.enable=ChaoFormService.getInstance().enable,this.init(this._options),this};jQuery.fn.chaoInput=function(a={}){a.target=this;let b=new ChaoInput(a);return b},'use strict';var ChaoSwitch=function(a={}){return this._options=a,this.$target=this._options.target,this.$element=null,this.getChecked=function(){return this._options.defaultChecked||this.$target.is(':checked')},this.getDisabled=function(){return this._options.disabled||this.$target.is(':disabled')},this.init=function(){let a=`
            <label class="chao-switch ${this._options.customClass?this._options.customClass:''} ${this.getDisabled()?'chao-disabled':''}" id="chao-${this.$target.attr('id')}">
                <input type="checkbox" class="chao-checkbox" ${this.getChecked()?'checked':''} ${this.getDisabled()?'disabled':''}>
                <span class="chao-slider"></span>
            </label>
        `;this.$target.replaceWith($.parseHTML(a)),this.$element=$(`#chao-${this.$target.attr('id')}.chao-switch`),this.handleBindings(),this.$element.data('chaoSwitch',this)},this.handleBindings=function(){let a=this;$(`.chao-checkbox`,this.$element).unbind(),$(`.chao-checkbox`,this.$element).on('change',b=>{let c=this.handleChecked($(b.target));a._options.onChange&&a._options.onChange({checked:c})})},this.handleChecked=function(a){let b=null;return'checked'===a.attr('checked')?(a.removeAttr('checked'),b=!1):(a.attr('checked','checked'),b=!0),b},this.enable=ChaoFormService.getInstance().enable,this.init(),this};jQuery.fn.chaoSwitch=function(a={}){a.target=this;let b=new ChaoSwitch(a);return b},'use strict';var ChaoValidator=function(a={}){this._options=a,this.$target=this._options.target,this._rules={_requiredRule:function(a){let b=a.val();return''!==b&&null!==b}},this._msgs={_requiredRule:'Field is required!'},this.validate=function(){for(let a of $('input:required, textarea:required',this.$target))this.validateOne($(a))},this.validateOne=function(a,b=void 0){let c=!0;if(void 0!==b)c=this._validate(a,b);else for(let b in this._rules){let d=this._validate(a,b);c=d?c:d}c&&a.hasClass('chao-invalid-content')&&this.removeAssertion(a)},this._validate=function(a,b){return!!this._rules[b](a)||(null!==this._msgs[b]&&void 0!==this._msgs[b]||a.hasClass('chao-invalid-content')?!a.hasClass('chao-invalid-content')&&this.render(a,this._msgs[b]):this.render(a,this._msgs._requiredRule),!1)},this.renderDefaultTooltip=function(a=''){let b=`<span class='chao-tooltip-message'>${a}</span>`,c=`<span class='chao-tooltip-icon ${this._options.iconClass}'></span>`,d=`<div class='chao-tooltip chao-invalid-message chao-tooltip-position-${this._options.position} ${this._options.customClass?this._options.customClass:''}'>
                            ${this._options.icon?c:''}
                            ${this._options.msg?b:''}
                        </div>`;return d},this.render=function(a,c){let d=this._options.customTooltip?this._options.customTooltip.replace('${msg}',c):this.renderDefaultTooltip(c);this._options.lazyLayout||this._options.position!==b.left?a.after($.parseHTML(d)):a.before($.parseHTML(d)),a.addClass('chao-invalid-content')},this.removeAssertion=function(a){a.siblings('.chao-tooltip.chao-invalid-message').remove(),a.removeClass('chao-invalid-content')};const b=Object.freeze({top:'top',bottom:'bottom',right:'right',left:'left'});return this.validatePosition=function(a){let c=b.right;return c=this._options.lazyLayout?void 0!==b[a]&&b[a]!==b.left?a:b.right:b[a]==b.right||b[a]==b.left?b[a]:b.right,c},this.checkDOMStructure=function(){if(this._options.lazyLayout){let a=$('input:required, textarea:required',this.$target);for(let b of a)if(0<$(b).siblings().length)return this._options.lazyLayout=!1,void console.error(`Lazy Layout was turn off because the checker found minimum one field which has sibling(s).\n`,$(b));this.$target.addClass('chao-validator'),this.$target.addClass('chao-validator-lazy')}},this.init=function(){this._options.rules&&(this._rules=Object.assign(this._options.rules,this._rules)),this._options.messages&&(this._msgs=Object.assign(this._options.messages,this._msgs)),null===this._options.lazyLayout||this._options.lazyLayout,this.checkDOMStructure(),this._options.position=this.validatePosition(this._options.position),this._options.icon=void 0===this._options.icon||null===this._options.icon||this._options.icon,this._options.msg=void 0===this._options.msg||null===this._options.msg||this._options.msg,this._options.iconClass=this._options.iconClass?this._options.iconClass:'fa fa-exclamation-circle',this._options.lazyLayout=void 0===this._options.lazyLayout||/** Set data on DOM. */this.$target.data('chaoValidator',this)},this.init(),this};jQuery.fn.chaoValidator=function(a={}){a.target=this;let b=new ChaoValidator(a);return b};